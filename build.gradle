/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
  // Apply the java-library plugin for API and implementation separation.
  id 'java-library'
  id 'maven-publish'
  id 'signing'

  // Format java code with spotless via prettier-java
  id 'com.diffplug.spotless' version '6.10.0'

  // delombok sources
  id 'io.freefair.lombok' version '6.5.1'

  id 'com.olafmertens.git-version' version '0.1.1'
  id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}

group = 'io.github.mschout'
description = 'netty-codec-netstring'

repositories {
  mavenLocal()
  mavenCentral()
}

java {
  toolchain {
    languageVersion.set(JavaLanguageVersion.of(8))
  }

  withSourcesJar()
  withJavadocJar()
}

dependencies {
  // Use JUnit Jupiter for testing.
  testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
  testImplementation 'com.google.guava:guava:31.1-jre'

  compileOnly 'io.netty:netty-codec:4.1.80.Final'
  testImplementation 'io.netty:netty-codec:4.1.80.Final'
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

tasks.named('test') {
  // Use JUnit Platform for unit tests.
  useJUnitPlatform()
}

// Format java code with spotlessApply task
spotless {
  java {
    prettier(['prettier': '2.0.5', 'prettier-plugin-java': '0.8.0'])
      .config([
        'parser': 'java',
        'tabWidth': 2,
        'printWidth': 140,
        'trailingComma': 'none',
        'useTabs': false
      ])
  }
}

signing {
  useGpgCmd()
  sign publishing.publications
}

publishing {
  publications {
    maven(MavenPublication) {
      groupId    = 'io.github.mschout'
      artifactId = 'netty-codec-netstring'

      from components.java

      pom {
        name = "${groupId}:${artifactId}"
        description = 'Interface to Email Sender Rewriting Scheme for Java'
        url = 'https://github.com/mschout/netty-codec-netstring'
        licenses {
          license {
            name = 'The Apache License, Version 2.0'
            url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            name = 'Michael Schout'
            email = 'schoutm@gmail.com'
            organizationUrl = 'https://github.com/mscnout'
          }
        }
        scm {
          connection = 'scm:git:git://github.com/mschout/netty-codec-netstring.git'
          developerConnection = 'scm:git:ssh://github.com:mschout/netty-codec-netstring.git'
          url = 'https://github.com/mschout/netty-codec-netstring/tree/master'
        }
      }
    }
  }
}

nexusPublishing {
  repositories {
    sonatype {
      nexusUrl = uri("https://s01.oss.sonatype.org/service/local/")
      snapshotRepositoryUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
      username = System.getenv("OSSRH_USERNAME") ?: 'credentials'
      password = System.getenv("OSSRH_PASSWORD") ?: 'credentials'
    }
  }
}